#!/bin/bash
################################################################################
# OpenERP-inator, a tool to manage OpenERP server instances
# Author: Daniel Reis, 2013
#
# TODO ideas: 
# * command to run tests on throw-away databases
# * commands to start in background, see instances running, and stop instances
# * set instance to autostart on boot command
# * provide better conf file template
# * remove instance command
# * command to list databases
# * command to list running instances
#
################################################################################

#fixed parameters:
VERSION="0.1"
OEADMIN_USER="`whoami`"
OEADMIN_HOME="$( cd "$( dirname "$0" )" && pwd )"
color='\e[1;34m'
endColor='\e[0m'

if [ -z "$1" ]; then # || "$1" = "help"
  echo "== OpenERP-inator == 
Dominate the entire ERP tri-state area by easilly installing and creating an 
army of OpenERP server instances in your server. The self-destruct button is 
intended only for test databases. Beware of Agent P.

For an easy and  quick start run: ./oetor auto-install 
This will make an automatic full installation, including the creation of an
initial "demov7" OpenERP instance. It's equivalent to running the sequence of
commands: get-dependencies; init; get-source; create demov7.

Commands Available:

  version           Display script's version info.
  get-dependencies  Install system dependencies and also tries to install the 
                    PostgreSQL database. Requires sudoer privilege.
  init              Creates db role for current user and the directory 
                    structure. Requires sudoer privilege.
  get-latest        Retrieves source code from nightly builds repository, into
                    the 'shared' directory.
  get-source        Retrieves source code from Lanchpad repositories, into 
                    the 'shared' directory.
  update-source     Updates the sources with later commits.
  version-source    Displays the sources revision numbers.
  create NAME [PORT] [FIXED_OPTIONS]
                    Create an OpenERP 7 database and instance named "NAME" and 
                    listening at port "PORT". If additional "FIXED_OPTIONS" are 
                    provided, they will be included in the generated 'start.sh' 
                    script.
                   
An OpenERP instance is a directory inside oetor's home directory, and can be 
started using the included 'start' script. 

The directory contains:

  server/           The server source code. By default it's a symlink to the 
                    sources in the 'shared' directory.
  addons-repo/      Contains the addons directories to use. These directories are
                    automatically added to the addons_path upon server start.
                    By default includes symlinks to the official addons sources 
                    in the 'shared' directory.
  start             Script to start the instance. If called with additional 
                    parameters, these will be passed to the openerp-server.
                    For example: ./start.sh -u all --stop-after-init    
  openerp-server.conf
                    Configuration file used by the instance.
"    
	exit 0
fi

#OPTION=$1
case "$1" in

version)
    echo "oetor version: $VERSION"
    echo "oetor home: $OEADMIN_HOME"
    ;;
    
get-dependencies)
	#--------------------------------------------------
	# Install Postgres and System dependencies
	#--------------------------------------------------
	echo -e "\n---- Installing PostgreSQL ----"
	sudo apt-get install postgresql

	echo -e "\n---- Installing system packages ----"
	yes | sudo apt-get install bzr bzrtools python-pip

	echo -e "\n---- Installing python packages ----"
	yes | sudo apt-get install python-dateutil python-docutils python-feedparser \
	python-gdata python-jinja2 python-ldap python-libxslt1 python-lxml python-mako \
	python-mock python-openid python-psycopg2 python-psutil python-pybabel \
	python-pychart python-pydot python-pyparsing python-reportlab python-simplejson \
	python-tz python-unittest2 python-vatnumber python-vobject python-webdav \
	python-werkzeug python-xlwt python-yaml python-zsi python-gdata

	#echo -e "\n---- Install python libraries ----"
	#sudo pip install gdata
    ;;
    
init)
	#--------------------------------------------------
	# Setup directories
	#   If reexecuted, updates the 'oetor' script with the executed version
	#--------------------------------------------------
	#Make this script available anywhere:
	#sudo ln -sf /usr/local/bin $0
	#echo -e "\n---- Create system user ----"
	#sudo adduser --system --quiet --shell=/bin/bash --home=$OEADMIN_HOME --gecos 'OpenERP' --group $OEADMIN_USER
    if [ "$2" ] ; then
        OEADMIN_HOME="$2"
    else
        OEADMIN_HOME="/opt/openerp"
    fi
    
	if [ ! -d /var/log/openerp ] ; then
	    echo -e "* Creating log directory /var/log/openerp ..."
	    sudo mkdir /var/log/openerp
	    sudo chown $OEADMIN_USER:$OEADMIN_USER /var/log/$OEADMIN_USER
	fi
	if [ ! -d $OEADMIN_HOME ] ; then
	    echo -e "* Creating home directory $OEADMIN_HOME ..."
	    sudo mkdir -p $OEADMIN_HOME
	    sudo chown $OEADMIN_USER:$OEADMIN_USER $OEADMIN_HOME
	fi
	if [ ! -d $OEADMIN_HOME/shared ] ; then
	    echo -e "* Creating shared sources directory $OEADMIN_HOME/shared ..."
	    mkdir $OEADMIN_HOME/shared
	fi
	
    if [ -z `psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='$OEADMIN_USER'"` ] ; then
        echo -e "* Creating database role $OEADMIN_USER ..."
        sudo su -c "createuser --createdb --no-createrole --no-superuser $OEADMIN_USER" postgres
    fi
    
	echo -e "* Updating $OEADMIN_HOME/oetor script ..."
    cp $0 $OEADMIN_HOME
    ;;
    
get-latest)
	#--------------------------------------------------
	# Download latest nightly build
	#
	#   Installed at $OEADMIN_HOME/shared/latest/7.0
    #   If re-downloading, sources are replaced but referring symlinks are kept
	#--------------------------------------------------
    #use bzr export destination-dir lp:branch-name  ?
	echo -e "${color}* Downloading version 7 nightly build ...${endColor}"
	mkdir -p $OEADMIN_HOME/shared
	wget --no-clobber http://nightly.openerp.com/7.0/nightly/src/openerp-7.0-latest.tar.gz -P $OEADMIN_HOME/shared

	echo -e "${color}* Uncompressing files ...${endColor}"
	rm -rf $OEADMIN_HOME/shared/.tmp
	mkdir -p $OEADMIN_HOME/shared/.tmp
	tar xf $OEADMIN_HOME/shared/openerp-7.0-latest.tar.gz --directory=$OEADMIN_HOME/shared/.tmp

	echo -e "${color}* Installing shared source files ...${endColor}"
	rm -rf $OEADMIN_HOME/shared/latest/7.0/*
    mkdir -p $OEADMIN_HOME/shared/latest/7.0
	mv $OEADMIN_HOME/shared/.tmp/`ls $OEADMIN_HOME/shared/.tmp/`/* $OEADMIN_HOME/shared/latest/7.0/
    ;;
    
get-source)
	#--------------------------------------------------
	# Checkout sources from Launchpad 
    #
    # using "https://launchpad.net/~openerp/..." instead of "lp:..." to usa an ananymous download, in case the user has a bzr ssh key setup
	#--------------------------------------------------
	if [ ! -d $OEADMIN_HOME/shared/addons/7.0 ] ; then
        echo -e "\n${color}* Checkout of openerp-addons 7.0${endColor}"
        mkdir -p $OEADMIN_HOME/shared/addons
        rm -rf $OEADMIN_HOME/shared/addons/~tmp
        bzr checkout --lightweight https://launchpad.net/~openerp/openobject-addons/7.0 $OEADMIN_HOME/shared/addons/~tmp
        mv $OEADMIN_HOME/shared/addons/~tmp $OEADMIN_HOME/shared/addons/7.0
    fi
	if [ ! -d $OEADMIN_HOME/shared/web/7.0 ] ; then
        echo -e "\n${color}* Checkout of openerp-web 7.0${endColor}"
        mkdir -p $OEADMIN_HOME/shared/web
        rm -rf $OEADMIN_HOME/shared/web/~tmp
        bzr checkout --lightweight https://launchpad.net/~openerp/openerp-web/7.0 $OEADMIN_HOME/shared/web/~tmp
        mv $OEADMIN_HOME/shared/web/~tmp $OEADMIN_HOME/shared/web/7.0
    fi
	if [ ! -d $OEADMIN_HOME/shared/server/7.0 ] ; then
        echo -e "\n${color}* Checkout of openerp-server 7.0${endColor}"
        mkdir -p $OEADMIN_HOME/shared/server
        rm -rf $OEADMIN_HOME/shared/server/~tmp
        bzr checkout --lightweight https://launchpad.net/~openerp/openobject-server/7.0 $OEADMIN_HOME/shared/server/~tmp
        mv $OEADMIN_HOME/shared/server/~tmp $OEADMIN_HOME/shared/server/7.0
    fi
	echo "Launchpad sources retrieved."
    ;;
    
update-source)
	#--------------------------------------------------
    # Update sources downloaded with "get-source"
	#--------------------------------------------------
	echo -e "* Updating openerp-addons 7.0"
	bzr update $OEADMIN_HOME/shared/addons/7.0
	echo -e "* Updating openerp-web 7.0"
	bzr update $OEADMIN_HOME/shared/web/7.0
	echo -e "* Updating openerp-server 7.0"
	bzr update $OEADMIN_HOME/shared/server/7.0
	echo "Sources updated."
    ;;

version-source)
	#--------------------------------------------------
    # List version revision numbers for sources downloaded with "get-source"
	#--------------------------------------------------
	echo -e "* Shared sources revision numbers (7.0):"
	echo -en "server\t"
	bzr revno -q $OEADMIN_HOME/shared/server/7.0
	echo -en "addons\t"
	bzr revno -q $OEADMIN_HOME/shared/addons/7.0
	echo -en "web\t"
	bzr revno -q $OEADMIN_HOME/shared/web/7.0
    ;;
    
create)
	#--------------------------------------------------
	# Create a new instance
	#--------------------------------------------------
	INSTANCE=$2
	if [ -z $INSTANCE ] ; then
        echo "STOPPING: please provide a name for the new server instance"
        exit 0
	fi

	if [ -d $OEADMIN_HOME/$INSTANCE ] ; then
		echo "STOPPING: server instance already exists."
		exit 0
    fi
    
	if [ $3 ] ; then
        PORT=$3
        shift 1
    else
        PORT="8069"
    fi
    
    echo "* Creating instance directory ..."
	mkdir -p $OEADMIN_HOME/$INSTANCE/addons-repo
    #cp $OEADMIN_HOME/templates/* $OEADMIN_HOME/$INSTANCE
    
    if [ -d $OEADMIN_HOME/shared/server/7.0 ] && [ -d $OEADMIN_HOME/shared/addons/7.0 ] && [ -d $OEADMIN_HOME/shared/web/7.0 ]; then
        echo "* Adding shared sources to site ..."
        ln -s $OEADMIN_HOME/shared/server/7.0 $OEADMIN_HOME/$INSTANCE/server
        ln -s $OEADMIN_HOME/shared/addons/7.0 $OEADMIN_HOME/$INSTANCE/addons-repo/addons
        ln -s $OEADMIN_HOME/shared/web/7.0/addons $OEADMIN_HOME/$INSTANCE/addons-repo/web

    else
        if [ -d $OEADMIN_HOME/shared/latest/7.0 ] ; then
            echo "* Adding server from shared latest nightly sources ..."
            ln -s $OEADMIN_HOME/shared/latest/7.0  $OEADMIN_HOME/$INSTANCE/server
        else
            echo "* Skipping server sources: none available ..."
        fi
    fi
    
    echo "* Creating instance database ..."
    createdb $INSTANCE
    
    echo "* Creating config file a start script ..."
    shift 2
    echo "[options]
; This is the password that allows database operations:
; admin_passwd = admin
db_user = $OEADMIN_USER
db_name = $INSTANCE
db_filter = $INSTANCE-*
netrpc = False
xmlrpcs = False
log_handler = ['werkzeug:CRITICAL']
" > $OEADMIN_HOME/$INSTANCE/openerp-server.conf
    echo -e "* Creating template start.sh helper script..."
	echo "#!/bin/sh
DIR=\"\$( cd \"\$( dirname \"\$0\" )\" && pwd )\"
\$DIR/server/openerp-server --xmlrpc-port=$PORT $* --addons-path=\`ls -dm \$DIR/addons-repo/*|tr -d ' '\` --config=\$DIR/openerp-server.conf \$*
" > $OEADMIN_HOME/$INSTANCE/start.sh
	chmod ug+x $OEADMIN_HOME/$INSTANCE/start.sh

    echo "
Instance \"$INSTANCE\" created: 
To start it type: `dirname $0`/demov7/start.sh
To use it browse: http://`hostname`:8069
"
	;;

start)
	INSTANCE=$2
	shift 2
	$OEADMIN_HOME/$INSTANCE/start.sh $*
	;;

auto-install)
    $0 get-dependencies
    $0 init
    $0 get-source
    $0 create demov7
    ;;
    
esac
