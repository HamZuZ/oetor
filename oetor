#!/bin/bash
################################################################################
# OpenERP-inator, a tool to manage OpenERP server instances
# Author: Daniel Reis, 2013
#
################################################################################

#fixed parameters:
VERSION="0.1"
OEVERSION="7.0"
OEADMIN_USER="`whoami`"
#OEADMIN_HOME="$( cd "$( dirname "$0" )" && pwd )"
OEADMIN_HOME="/opt/oerp"
color='\e[1;34m'
endColor='\e[0m'

if [ -z "$1" ]; then # || "$1" = "help"
  echo "OpenERP-inator: dominate the entire ERP tri-state area by easilly
installing and creating an army of OpenERP server instances in your server.
The self-destruct button is intended only for test databases. Beware of Agent P.
https://github.com/dreispt/oetor

For an easy and  quick start run: ./oetor auto-install 
This will make an automatic full installation, including the creation of an
initial "demo" OpenERP instance. It's equivalent to running the sequence of
commands: get-dependencies; init; get-source; create demo.

Usage: oetor COMMAND [PARAMETERS]

Commands available:

  version           Display script's version info.
  get-dependencies  Install system dependencies including the PostgreSQL
                    database. Requires sudoer privilege.
  init [VERSION]    Creates db role for current user and the directory 
                    structure. Requires sudoer privilege. VERSION is the 
                    OpenERP version: 7.0 | trunk | 6.1.
  get-latest        Retrieves source code from nightly builds repository, into
                    the 'shared' directory.
  get-source        Retrieves source code from Lanchpad repositories, into 
                    the 'shared' directory.
  update-source     Updates the sources with most recent versions.
  version-source    Displays the sources revision numbers.
  create NAME [PORT] [FIXED_OPTIONS]
                    Create an OpenERP 7 database and instance named "NAME" and 
                    listening at port "PORT". If additional "FIXED_OPTIONS" are 
                    provided, they will be included in the generated 'start' 
                    script.
  start OEVERS NAME Starts this server instance.
  test OEVERS NAME  Creates a test database and runs tests for the instance.
                   
An OpenERP instance is a directory inside oetor's home directory. It can be 
started running the `start` script and and includes a `openerp-server.conf`
configuration file used by the instance.

If the `start` script is provided with additional parameters, these will be 
passed to the openerp-server.
For example: ./start.sh -u all --stop-after-init    

The contained directories are automatically added to the addons_path upon server
start. By default includes symlinks to the official addons sources in the 
'shared' directory.
"    
    exit 0
fi

#OPTION=$1
case "$1" in

version)
    echo "oetor version: $VERSION"
    echo "oetor home: $OEADMIN_HOME"
    ;;
    
get-dependencies)
    #--------------------------------------------------
    # Install Postgres and System dependencies
    #  - tested with Ubuntu 12
    #--------------------------------------------------
    echo -e "\n---- Installing PostgreSQL ----"
    sudo apt-get install postgresql

    echo -e "\n---- Installing system packages ----"
    yes | sudo apt-get install bzr bzrtools python-pip git

    echo -e "\n---- Installing python packages ----"
    yes | sudo apt-get install python-dateutil python-docutils python-feedparser \
    python-gdata python-jinja2 python-ldap python-libxslt1 python-lxml python-mako \
    python-mock python-openid python-psycopg2 python-psutil python-pybabel \
    python-pychart python-pydot python-pyparsing python-reportlab python-simplejson \
    python-tz python-unittest2 python-vatnumber python-vobject python-webdav \
    python-werkzeug python-xlwt python-yaml python-zsi python-gdata

    #echo -e "\n---- Install python libraries ----"
    #sudo pip install gdata
    ;;
    
init)
    #--------------------------------------------------
    # Setup directories
    #  - repo stored in /opt/oerp/<oeversion>
    #  - reexecution safe (nothing is done)
    #  - repo is a git clone: `git pull` will get it's latest version
    #--------------------------------------------------
    #oetor init [OEVERSION=7.0]
    if [ "$2" ] ; then
        OEVERSION="$2"
    else
        OEVERSION="7.0"
    fi

    if [ ! -d /var/log/oerp ] ; then
        echo -e "* Creating base log directory /var/log/oerp ..."
        sudo mkdir -p /var/log/oerp
        sudo chown $OEADMIN_USER:root /var/log/oerp
    fi
    if [ ! -d /var/log/oerp/$OEVERSION ] ; then
        echo -e "* Creating log directory /var/log/oerp/$OEVERSION ..."
        mkdir -p /var/log/oerp/$OEVERSION
    fi

    OEADMIN_HOME="/opt/oerp/$OEVERSION"
    if [ ! -d /opt/oerp ] ; then
        echo -e "* Creating oetor home directory /opt/oerp ..."
        sudo git clone https://github.com/dreispt/oetor /opt/oerp
        sudo chown $OEADMIN_USER:root /opt/oerp
        # Make sure the local executed copy of the script is the version installed 
        # cp $0 /opt/oerp/$OEVERSION
    else
        echo -e "* Getting oetor lates version on directory /opt/oerp ..."
        git --git-dir=/opt/oerp pull 
    fi
    
    if [ ! -d /opt/oerp/$OEVERSION ] ; then
        echo -e "* Creating instance directory /opt/oerp/$OEVERSION ..."
        mkdir -p /opt/oerp/$OEVERSION
    fi

    $0 get-source $OEVERSION
    ;;
    
get-latest)
    #--------------------------------------------------
    # Download latest nightly build
    #
    #   Installed at $OEADMIN_HOME/shared/latest/7.0
    #   If re-downloading, sources are replaced but referring symlinks are kept
    #--------------------------------------------------
    echo "Retrieving nightly build sources to $OEADMIN_HOME/shared:"
    echo -e "${color}* Downloading version 7 nightly build ...${endColor}"
    mkdir -p $OEADMIN_HOME/shared
    wget --no-clobber http://nightly.openerp.com/$OEVERSION/nightly/src/openerp-$OEVERSION-latest.tar.gz -P $OEADMIN_HOME/shared

    echo -e "${color}* Uncompressing files ...${endColor}"
    rm -rf $OEADMIN_HOME/shared/.tmp
    mkdir -p $OEADMIN_HOME/shared/.tmp
    tar xf $OEADMIN_HOME/shared/openerp-$OEVERSION-latest.tar.gz --directory=$OEADMIN_HOME/shared/.tmp

    echo -e "${color}* Installing shared source files ...${endColor}"
    rm -rf $OEADMIN_HOME/shared/latest/*
    mkdir -p $OEADMIN_HOME/shared/latest
    mv $OEADMIN_HOME/shared/.tmp/`ls $OEADMIN_HOME/shared/.tmp/`/* $OEADMIN_HOME/shared/latest/
    ;;
    
get-source)
    #--------------------------------------------------
    # Checkout sources from Launchpad 
    #   using "https://launchpad.net/~openerp/..." instead of "lp:..." for anonymous download (to avoid asking pwd if an ssh key is set)
    #   using `checkout --lightweight` for fast download of shallow branches, but that are still updatable
    #--------------------------------------------------
    if [ "$2" ] ; then
        OEVERSION="$2"
    else
        OEVERSION="7.0"
    fi
    OEADMIN_HOME=$OEADMIN_HOME/$OEVERSION
    echo "Retrieving Launchpad sources to $OEADMIN_HOME/shared:"
    mkdir -p $OEADMIN_HOME/shared
    if [ ! -d $OEADMIN_HOME/shared/addons ] ; then
        echo -e "\n${color}* Checkout of openerp-addons/$OEVERSION ...${endColor}"
        rm -rf $OEADMIN_HOME/shared/~tmp
        bzr checkout --lightweight https://launchpad.net/~openerp/openobject-addons/$OEVERSION $OEADMIN_HOME/shared/~tmp
        mv $OEADMIN_HOME/shared/~tmp $OEADMIN_HOME/shared/addons
    fi
    if [ ! -d $OEADMIN_HOME/shared/web ] ; then
        echo -e "\n${color}* Checkout of openerp-web/$OEVERSION ...${endColor}"
        rm -rf $OEADMIN_HOME/shared/~tmp
        bzr checkout --lightweight https://launchpad.net/~openerp/openerp-web/$OEVERSION $OEADMIN_HOME/shared/~tmp
        mv $OEADMIN_HOME/shared/~tmp $OEADMIN_HOME/shared/web
    fi
    if [ ! -d $OEADMIN_HOME/shared/server ] ; then
        echo -e "\n${color}* Checkout of openerp-server/$OEVERSION ...${endColor}"
        rm -rf $OEADMIN_HOME/shared/~tmp
        bzr checkout --lightweight https://launchpad.net/~openerp/openobject-server/$OEVERSION $OEADMIN_HOME/shared/~tmp
        mv $OEADMIN_HOME/shared/~tmp $OEADMIN_HOME/shared/server
    fi
    echo "Launchpad sources retrieved."
    ;;
    
update-source)
    #--------------------------------------------------
    # Update sources downloaded with "get-source"
    #--------------------------------------------------
    echo -e "* Updating openerp-addons"
    bzr update $OEADMIN_HOME/shared/addons
    echo -e "* Updating openerp-web"
    bzr update $OEADMIN_HOME/shared/web
    echo -e "* Updating openerp-server"
    bzr update $OEADMIN_HOME/shared/server
    echo "Sources updated."
    ;;

version-source)
    #--------------------------------------------------
    # List version revision numbers for sources downloaded with "get-source"
    #--------------------------------------------------
    echo -e "* Shared sources revision numbers ($OEVERSION):"
    echo -en "server\t"
    bzr revno -q $OEADMIN_HOME/shared/server
    echo -en "addons\t"
    bzr revno -q $OEADMIN_HOME/shared/addons
    echo -en "web\t"
    bzr revno -q $OEADMIN_HOME/shared/web
    ;;
    
create)
    #--------------------------------------------------
    # Create a new instance:
    #   oetor VERSION INSTANCE [PORT] [FIXED_PARAMS]
    #--------------------------------------------------

    # Create psql role if missing
    if [ -z `psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='$OEADMIN_USER'"` ] ; then
        echo -e "* Creating database role $OEADMIN_USER ..."
        sudo su -c "createuser --createdb --no-createrole --no-superuser $OEADMIN_USER" postgres
    fi
    
    # Check OpenERP version parameter
    if [ -z $2 ] ; then
        echo "Usage:   oetor create OEVERSION INSTANCE"
        echo "Example: oetor create 7.0 myserver"
        exit 0
    else
        OEVERSION=$2
    fi
    if [ ! -d $OEADMIN_HOME/$OEVERSION ] ; then
        echo "STOPPING: $OEADMIN_HOME/$OEVERSION does not exist."
        exit 0
    fi
    
    # Check Instance Name parameter
    if [ -z $3 ] ; then
        echo "Usage: oetor create $OEVERSION INSTANCE."
        echo "Example: oetor create $OEVERSION myserver"
        exit 0
    else
        INSTANCE=$2/$3
    fi
    if [ -d $OEADMIN_HOME/$INSTANCE ] ; then
        echo "STOPPING: $OEADMIN_HOME/$INSTANCE already exists."
        exit 0
    fi

    # Check server source available    
    if [ -d $OEADMIN_HOME/$OEVERSION/shared/server ] ; then
        OESERVER="shared/server"
    else
        if  [ -d $OEADMIN_HOME/$OEVERSION/shared/latest ] ; then
            OESERVER="shared/latest"
        else
            echo "STOPPING: $OEADMIN_HOME/$OEVERSION/shared does not contain server sources."
            exit 0
        fi
    fi

    # Read port
    if [ $4 ] ; then
        PORT=$4
        shift 1
    else
        PORT="8069"
    fi
    

    # Create instance directory
    echo "* Creating instance directory ..."
    mkdir $OEADMIN_HOME/$INSTANCE
    echo "* Linking to addons ..."
    if [ -d $OEADMIN_HOME/$OEVERSION/shared/addons ] ; then
        ln -s $OEADMIN_HOME/$OEVERSION/shared/addons $OEADMIN_HOME/$INSTANCE/addons
    fi
    echo "* Linking to web ..."
    if [ -d $OEADMIN_HOME/$OEVERSION/shared/web ] ; then
        ln -s $OEADMIN_HOME/$OEVERSION/shared/web/addons $OEADMIN_HOME/$INSTANCE/web
    fi
    
    echo "* Creating instance database ..."
    createdb $INSTANCE
    
    echo "* Creating instance config file ..."
    echo "[options]
; This is the password that allows database operations:
; admin_passwd = admin
db_user = $OEADMIN_USER
db_name = $INSTANCE
netrpc = False
xmlrpcs = False
log_handler = ['werkzeug:CRITICAL']
" > $OEADMIN_HOME/$INSTANCE/openerp-server.conf

    echo -e "* Creating instance start script ..."
    shift 3
    echo "#!/bin/sh
DIR=\"$OEADMIN_HOME/$INSTANCE\"
$OEADMIN_HOME/$OEVERSION/$OESERVER/openerp-server --xmlrpc-port=$PORT $* --addons-path=\`ls -dm \$DIR/*/|tr -d ' '\` --config=\$DIR/openerp-server.conf \$*
" > $OEADMIN_HOME/$INSTANCE/start
    chmod ug+x $OEADMIN_HOME/$INSTANCE/start

    echo "
Instance \"$INSTANCE\" created: 
To start it type: $OEADMIN_HOME/$INSTANCE/start
To use it browse: http://`hostname`:$PORT
"
    ;;

start)
    INSTANCE=$2/$3
    shift 3
    $OEADMIN_HOME/$INSTANCE/start $*
    ;;

test)
    INSTANCE=$2/$3
    dropdb $INSTANCE-test
    createdb $INSTANCE-test
    shift 3
    $OEADMIN_HOME/$INSTANCE/start --test-enable --test-commit --stop-after-init $*
    ;;

remove)
    echo "Sorry, the self-destruct button is currently disabled. To go ahead run:
rm -r /opt/oerp/VERSION/INSTANCE
dropdb OEVERSION /INSTANCE"
  
auto-install)
    $0 get-dependencies
    $0 init
    $0 create 7.0 demo
    ;;
    
esac
